# *********************************
# * autoconf configuration script *
# *********************************

# if you change here the version also change it in PROLOG_VERSION below

AC_INIT(gprolog, 1.2.18, bug-prolog@gnu.org)
AC_PREREQ(2.52)
# AC_CONFIG_AUX_DIR(ConfUtils) to do...
AC_CONFIG_SRCDIR(SETVARS)
AC_CONFIG_HEADER(EnginePl/gp_config.h)
AC_CONFIG_FILES(Makefile
		TopComp/Makefile
		Pl2Wam/Makefile
		Wam2Ma/Makefile
		Ma2Asm/Makefile
		Fd2C/Makefile
		Linedit/Makefile
		W32GUICons/Makefile
		EnginePl/Makefile
		BipsPl/Makefile
		EngineFD/Makefile
		BipsFD/Makefile
		$OTHER_MAKEFILES)



# ***************************
# * initial variable values *
# ***************************

PROLOG_NAME='GNU Prolog/CX'
PROLOG_NAME1='gprolog'
PROLOG_VARIANT='-cx'
PROLOG_VERSION='1.2.18'
PROLOG_DATE='Jan 02 2006'
PROLOG_COPYRIGHT='Copyright (C) 1999-2006 Daniel Diaz'

TOP_LEVEL=$PROLOG_NAME1
GPLC=gplc
HEXGPLC=hexgplc
ENV_VARIABLE=PL_PATH

USE_EBP=no
USE_LINEDIT=yes
USE_GUI_CONSOLE=yes
USE_SOCKETS=yes
USE_FD_SOLVER=yes

DLL_W32GUICONS=w32guicons
LIB_LINEDIT=liblinedit
LIB_ENGINE_PL=libengine_pl
LIB_BIPS_PL=libbips_pl
LIB_ENGINE_FD=libengine_fd
LIB_BIPS_FD=libbips_fd

# ******************
# * variable names *
# ******************

AC_SUBST(PROLOG_NAME1)
AC_SUBST(PROLOG_NAME)
AC_SUBST(PROLOG_VERSION)
AC_SUBST(PROLOG_DATE)
AC_SUBST(PROLOG_COPYRIGHT)
AC_SUBST(PROLOG_VARIANT)

AC_SUBST(PROLOG_BINDIR)
AC_SUBST(PROLOG_LIBDIR)
AC_SUBST(PROLOG_INCDIR)

AC_SUBST(TOP_LEVEL)
AC_SUBST(GPLC)
AC_SUBST(HEXGPLC)
AC_SUBST(ENV_VARIABLE)
AC_SUBST(TOP_LEVEL_FLAGS)

AC_SUBST(CFLAGS_PREFIX_REG)
AC_SUBST(CFLAGS_MACHINE)
AC_SUBST(CFLAGS_UNSIGNED_CHAR)
AC_SUBST(LDLIBS)

AC_SUBST(ASM_SUFFIX)
AC_SUBST(OBJ_SUFFIX)
AC_SUBST(EXE_SUFFIX)
AC_SUBST(CC_OBJ_NAME_OPT)
AC_SUBST(CC_EXE_NAME_OPT)
AC_SUBST(AR_RC)
AC_SUBST(AR_SEP)
AC_SUBST(AS)
AC_SUBST(STRIP)

AC_SUBST(RC)
AC_SUBST(LD)
AC_SUBST(LD_OUT_NAME_OPT)

AC_SUBST(ROOT_DIR)
AC_SUBST(ROOT_DIR1)
AC_SUBST(PKG_NAME)
AC_SUBST(INSTALL_DIR)
AC_SUBST(LINKS_DIR)
AC_SUBST(DOC_DIR)
AC_SUBST(HTML_DIR)
AC_SUBST(EXAMPLES_DIR)

AC_SUBST(TXT_FILES)
AC_SUBST(BIN_FILES)
AC_SUBST(OBJ_FILES)
AC_SUBST(LIB_FILES)
AC_SUBST(INC_FILES)
AC_SUBST(DOC_FILES)
AC_SUBST(HTML_FILES)
AC_SUBST(EXPL_FILES)
AC_SUBST(EXC_FILES)
AC_SUBST(EXFD_FILES)

AC_SUBST(MAKE_LE_DIRS)
AC_SUBST(MAKE_W32GC_DIRS)
AC_SUBST(MAKE_FD_DIRS)

AC_SUBST(MAKE_LE_INTERF_OBJS)
AC_SUBST(MAKE_SOCKETS_OBJS)

AC_SUBST(DLL_W32GUICONS)
AC_SUBST(LIB_LINEDIT)
AC_SUBST(LIB_ENGINE_PL)
AC_SUBST(LIB_BIPS_PL)
AC_SUBST(LIB_ENGINE_FD)
AC_SUBST(LIB_BIPS_FD)


# *******************
# * package options *
# *******************


AC_ARG_WITH(install-dir, [  --with-install-dir=DIR  specify INSTALL_DIR],
		[WITH_INSTALL_DIR="$withval"])

AC_ARG_WITH(links-dir,   [  --with-links-dir=DIR    specify LINKS_DIR],
		[WITH_LINKS_DIR="$withval"])

AC_ARG_WITH(exec-prefix, [  --with-exec-prefix=DIR  specify GP_EXE_DIR],
		[WITH_GP_EXE_DIR="$withval"])

AC_ARG_WITH(doc-dir,     [  --with-doc-dir=DIR      specify DOC_DIR],
		[WITH_DOC_DIR="$withval"])

AC_ARG_WITH(html-dir,    [  --with-html-dir=DIR     specify HTML_DIR],
		[WITH_HTML_DIR="$withval"])

AC_ARG_WITH(examples-dir,[  --with-examples-dir=DIR specify EXAMPLES_DIR],
		[WITH_EXAMPLES_DIR="$withval"])

AC_ARG_WITH(msvc,        [  --with-msvc             use MS VC++],
		[WITH_MSVC="$withval"],
		[WITH_MSVC=no])

AC_ARG_WITH(c-flags,     [[  --with-c-flags[=FLAGS]  specify C flags]],
		[WITH_C_FLAGS="$withval"],
		[WITH_C_FLAGS=yes])

AC_ARG_ENABLE(regs,      [  --disable-regs          do not use machine registers],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_REGS);;
		   *)  ;;
	       esac])

AC_ARG_ENABLE(ebp,      [  --disable-ebp           do not use the ebp register on ix86 machines],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_EBP) USE_EBP=no;;
		   *)  USE_EBP=yes;;
	       esac])

AC_ARG_ENABLE(fast-call, [  --disable-fast-call     do not use fast call on ix86],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_FAST_CALL);;
		   *)  ;;
	       esac])

AC_ARG_ENABLE(linedit,   [  --disable-linedit       do not include line editor facility],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_LINEDIT) USE_LINEDIT=no;;
		   *)  USE_LINEDIT=yes;;
	       esac])


AC_ARG_ENABLE(piped-consult, [  --disable-piped-consult do not pipe stdin of pl2wam when consult/1],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_PIPED_STDIN_FOR_CONSULT);;
		   *)  ;;
	       esac])


AC_ARG_ENABLE(gui-console,[  --disable-gui-console   do not use the Win32 GUI console],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_GUI_CONSOLE) USE_GUI_CONSOLE=no;;
		   *)  USE_GUI_CONSOLE=yes;;
	       esac])

AC_ARG_ENABLE(sockets,   [  --disable-sockets       do not include sockets facility],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_SOCKETS)  USE_SOCKETS=no;;
		   *)  USE_SOCKETS=yes;;
	       esac])

AC_ARG_ENABLE(fd-solver, [  --disable-fd-solver     do not include the FD constraint solver],
              [case "$enableval" in
		   no) AC_DEFINE(NO_USE_FD_SOLVER) USE_FD_SOLVER=no;;
		   *)  USE_FD_SOLVER=yes;;
	       esac])

AC_ARG_ENABLE(watermark, [  --enable-watermark      call foreign destructors upon choice-point removal],
             [case "$enableval" in
                  yes) AC_DEFINE(USE_WATERMARK) USE_WATERMARK=yes;;
                  *)   USE_WATERMARK=no;;
              esac])

AC_ARG_ENABLE(dynamic, [  --enable-dynamic          create dynamically-loadable objects],
             [case "$enableval" in
                  yes) AC_DEFINE(USE_DYNAMIC) USE_DYNAMIC=yes;;
                  *)   USE_DYNAMIC=no;;
              esac])

if test "$USE_EBP" = no; then
	AC_DEFINE(NO_USE_EBP)
fi



# ***********************
# * checks for programs *
# ***********************

if test "$WITH_MSVC" != no; then
	echo "using MSVC++ as C compiler"
	CC=cl
fi

# should be always done to correctly set EXEEXT (CC is set to cl for MSVC)
# cannot be put in the then and the else part !!! so repeat the test !

AC_PROG_CC


if test "$WITH_MSVC" != no; then
	ASM_SUFFIX='.asm'
	OBJ_SUFFIX='.obj'
        LIB_SUFFIX='.lib'
	CC_OBJ_NAME_OPT='/Fo'
	CC_EXE_NAME_OPT='/Fe'
	AC_CHECK_PROGS(NASM,nasmw nasm,no)
	if test "$NASM" = no; then
		AC_MSG_ERROR([nasm is required under win32])
	fi
	AS="$NASM -f win32"
        AR_RC='lib /nologo /out:'
        AR_SEP=''
	STRIP=:
        RANLIB=:
	RC=rc
	LD=link
	LD_OUT_NAME_OPT='/out:'
else
	if test "$GCC" != yes; then
		AC_MSG_ERROR([gcc is required (or MSVC++ under win32)])
	fi
	AS=as
        AC_PROG_RANLIB

	ASM_SUFFIX='.s'
	OBJ_SUFFIX='.o'
        LIB_SUFFIX='.a'
	CC_OBJ_NAME_OPT='-o '
	CC_EXE_NAME_OPT='-o '
        AR_RC='ar rc '
        AR_SEP=' '
	STRIP=strip
fi


# for old versions of autoconf which had not AC_EXEEXT
# EXEEXT=
# the following is useless in 2.52
# AC_EXEEXT

EXE_SUFFIX=$EXEEXT
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_LN_S

DLL_W32GUICONS=$DLL_W32GUICONS.dll
LIB_LINEDIT=$LIB_LINEDIT$LIB_SUFFIX
LIB_ENGINE_PL=$LIB_ENGINE_PL$LIB_SUFFIX
LIB_BIPS_PL=$LIB_BIPS_PL$LIB_SUFFIX
LIB_ENGINE_FD=$LIB_ENGINE_FD$LIB_SUFFIX
LIB_BIPS_FD=$LIB_BIPS_FD$LIB_SUFFIX



# *******************************
# * host detection and features *
# *******************************

AC_CANONICAL_HOST
if test "$WITH_MSVC" != no; then
	AC_DEFINE(M_ix86)
	AC_DEFINE(M_win32)
	AC_DEFINE(M_ix86_win32)
        host_vendor=Microsoft
        host_os=win32
        WIN32=yes
else
        WIN32=no
	case "$host_cpu" in
		mips)           AC_DEFINE(M_mips);;
		alpha)          AC_DEFINE(M_alpha);;
		sparc)          AC_DEFINE(M_sparc);;
		i*86)           AC_DEFINE(M_ix86);;
        	powerpc|ppc)    AC_DEFINE(M_powerpc);;
		x86_64)         AC_DEFINE(M_x86_64);;
	esac

	case "$host_os" in
		*osf*)		AC_DEFINE(M_osf);;
		irix*)          AC_DEFINE(M_irix);;
		sunos*)         AC_DEFINE(M_sunos);;
		solaris*)       AC_DEFINE(M_solaris);;
		linux*)         AC_DEFINE(M_linux);;
		cygwin*)        AC_DEFINE(M_cygwin);;
		*sco*)          AC_DEFINE(M_sco);;
		*bsd*)		AC_DEFINE(M_bsd);;
		*darwin*)	AC_DEFINE(M_bsd);;
	esac

	case "$host" in
		mips*irix*)      AC_DEFINE(M_mips_irix);;
		sparc*sunos*)    AC_DEFINE(M_sparc_sunos);;
		sparc*solaris*)  AC_DEFINE(M_sparc_solaris);;
	        alpha*osf*)      AC_DEFINE(M_alpha_osf);;
	        alpha*linux*)    AC_DEFINE(M_alpha_linux);;
		i*86*linux*)     AC_DEFINE(M_ix86_linux);;
		i*86*solaris*)   AC_DEFINE(M_ix86_solaris);;
		i*86*sco*)       AC_DEFINE(M_ix86_sco);;
		i*86*bsd*)       AC_DEFINE(M_ix86_bsd);;
        	powerpc*linux*)  AC_DEFINE(M_powerpc_linux);;
		powerpc*darwin*) AC_DEFINE(M_powerpc_darwin);;
		*86*cygwin*)     AC_DEFINE(M_ix86_cygwin);;
		x86_64*linux*)   AC_DEFINE(M_x86_64_linux);;
		*)               AC_MSG_ERROR(unsupported architecture)
	esac

fi

AC_CHECK_SIZEOF(long)
AC_CHECK_HEADERS(sys/ioctl_compat.h termios.h malloc.h)
AC_FUNC_MMAP 
AC_CHECK_FUNCS(mallopt fgetc)


# ********************
# * C compiler flags *
# ********************

CFLAGS_MACHINE=
CFLAGS_PREFIX_REG=

AC_C_INLINE

if test "$WITH_MSVC" != no; then
	case "$WITH_C_FLAGS" in
		debug) CFLAGS='/W3 /ZI /GX';;
		no)    CFLAGS='';;
		yes)   CFLAGS='/O2 /GX';;
		*)     CFLAGS="$WITH_C_FLAGS";;
	esac

	CFLAGS_UNSIGNED_CHAR='/J'
	CFLAGS_MACHINE='/nologo'

else
	case "$WITH_C_FLAGS" in
		debug) CFLAGS='-g -Wall';;
		no)    CFLAGS='';;
		yes)   CFLAGS='-O3 -fomit-frame-pointer';;
		*)     CFLAGS="$WITH_C_FLAGS";;
	esac

	CFLAGS_PREFIX_REG='-ffixed-%s'
	CFLAGS_UNSIGNED_CHAR='-funsigned-char'

        CFLAGS_MACHINE=
	case "$host" in
		mips*irix*)        CFLAGS_MACHINE='-mcpu=4000';;
		*sparc*sunos4.1.3) CFLAGS_MACHINE='-msupersparc';;
		*sparc*solaris)    CFLAGS_MACHINE='-msupersparc';;
		i686*)             CFLAGS_MACHINE='-mcpu=pentiumpro';;
		i586*)             CFLAGS_MACHINE='-mcpu=pentium';;
		i*86*)             CFLAGS_MACHINE='-mcpu=i486';;
		powerpc*darwin*)   CFLAGS_MACHINE='-mpowerpc -no-cpp-precomp';;
	esac

	case "$host" in
		i*86*) if test "$USE_EBP" != no; then
			CF1=`echo $CFLAGS | sed -e 's/\(.*\)-fomit-frame-pointer\(.*\)/\1\2/'`
			if test "$CF1" != "$CFLAGS"; then
				echo use ebp and move -fomit-frame-pointer to CFLAGS_MACHINE
				CFLAGS=$CF1
				CFLAGS_MACHINE="$CFLAGS_MACHINE -fomit-frame-pointer"
			else
				echo do not use ebp since -fomit-frame-pointer is not specified in CFLAGS
				USE_EBP=no
				AC_DEFINE(NO_USE_EBP)
			fi
		       fi;;
	esac


#	case "$host" in
#		i*86*) CFLAGS_MACHINE="$CFLAGS_MACHINE -malign-loops=2 -malign-jumps=2 -malign-functions=2";;
#	esac


# For MacOsX - try to avoid this (activate only for fast library fix)
#	case "$host" in
#		powerpc*darwin*)	RANLIB="$RANLIB -c";;
#	esac

fi



# ********************
# * libraries to add *
# ********************


if test "$WITH_MSVC" != no; then
	LDFLAGS='/nologo'
	LDLIBS='advapi32.lib user32.lib'
else
	LDLIBS='-lm'
fi

if test "$USE_SOCKETS" = yes; then
	if test "$WITH_MSVC" != no; then
		LDLIBS="$LDLIBS ws2_32.lib"
	else
		AC_CHECK_FUNC(socket,[],
                      AC_CHECK_LIB(socket,socket,LDLIBS="$LDLIBS -lsocket",
                                   AC_MSG_ERROR(cannot find socket library)))

		AC_CHECK_FUNC(gethostbyname,[],
                      AC_CHECK_LIB(nsl,gethostbyname,LDLIBS="$LDLIBS -lnsl"))
	# (No error here; just assume gethostbyname is in -lsocket.)
	fi
fi



# ***********************
# * gp_config.h defines *
# ***********************

AC_DEFINE_UNQUOTED(PROLOG_NAME,      "$PROLOG_NAME")
AC_DEFINE_UNQUOTED(PROLOG_NAME1,     "$PROLOG_NAME1")
AC_DEFINE_UNQUOTED(PROLOG_VERSION,   "$PROLOG_VERSION")
AC_DEFINE_UNQUOTED(PROLOG_VARIANT,   "$PROLOG_VARIANT")
AC_DEFINE_UNQUOTED(PROLOG_DATE,      "$PROLOG_DATE")
AC_DEFINE_UNQUOTED(PROLOG_COPYRIGHT, "$PROLOG_COPYRIGHT")

AC_DEFINE_UNQUOTED(PROLOG_BINDIR,    "$bindir")
AC_DEFINE_UNQUOTED(PROLOG_LIBDIR,    "$libdir")
AC_DEFINE_UNQUOTED(PROLOG_INCDIR,    "$includedir")

AC_DEFINE_UNQUOTED(TOP_LEVEL,        "$TOP_LEVEL")
AC_DEFINE_UNQUOTED(GPLC,             "$GPLC")
AC_DEFINE_UNQUOTED(HEXGPLC,          "$HEXGPLC")
AC_DEFINE_UNQUOTED(ENV_VARIABLE,     "$ENV_VARIABLE")

AC_DEFINE_UNQUOTED(M_CPU,            "$host_cpu")
AC_DEFINE_UNQUOTED(M_VENDOR,         "$host_vendor")
AC_DEFINE_UNQUOTED(M_OS,             "$host_os")

AC_DEFINE_UNQUOTED(CC,               "$CC")
AC_DEFINE_UNQUOTED(CFLAGS_PREFIX_REG,"$CFLAGS_PREFIX_REG")
AC_DEFINE_UNQUOTED(CFLAGS,           "$CFLAGS")  
AC_DEFINE_UNQUOTED(CFLAGS_MACHINE,   "$CFLAGS_MACHINE")
AC_DEFINE_UNQUOTED(LDFLAGS,          "$LDFLAGS")
AC_DEFINE_UNQUOTED(LDLIBS,           "$LDLIBS")
AC_DEFINE_UNQUOTED(AS,               "$AS")
AC_DEFINE_UNQUOTED(STRIP,            "$STRIP")

AC_DEFINE_UNQUOTED(ASM_SUFFIX,       "$ASM_SUFFIX")
AC_DEFINE_UNQUOTED(OBJ_SUFFIX,       "$OBJ_SUFFIX")
AC_DEFINE_UNQUOTED(EXE_SUFFIX,       "$EXE_SUFFIX")
AC_DEFINE_UNQUOTED(CC_OBJ_NAME_OPT,  "$CC_OBJ_NAME_OPT")
AC_DEFINE_UNQUOTED(CC_EXE_NAME_OPT,  "$CC_EXE_NAME_OPT")

AC_DEFINE_UNQUOTED(DLL_W32GUICONS,   "$DLL_W32GUICONS")
AC_DEFINE_UNQUOTED(LIB_LINEDIT,      "$LIB_LINEDIT")
AC_DEFINE_UNQUOTED(LIB_ENGINE_PL,    "$LIB_ENGINE_PL")
AC_DEFINE_UNQUOTED(LIB_BIPS_PL,      "$LIB_BIPS_PL")
AC_DEFINE_UNQUOTED(LIB_ENGINE_FD,    "$LIB_ENGINE_FD")
AC_DEFINE_UNQUOTED(LIB_BIPS_FD,      "$LIB_BIPS_FD")



# ***************
# * directories *
# ***************

# a function to compare 2 directories (avoid diff with trailing /)
# does not take into account symlinks...

same_directory()
{
 f1=`dirname $1`/`basename $1`
 f2=`dirname $2`/`basename $2`
 test $f1 = $f2
}

ROOT_DIR=`(cd .. ; pwd)`
if test -x /bin/cygpath.exe; then
	ROOT_DIR1=`cygpath -a -w ..`
else
	ROOT_DIR1=$ROOT_DIR
fi

test "$prefix"      = NONE && prefix=/usr/local
test "$exec_prefix" = NONE && exec_prefix=$prefix

PKG_NAME=$PROLOG_NAME1$PROLOG_VARIANT-$PROLOG_VERSION

# *-------------*
# * INSTALL_DIR *
# *-------------*

if test "$prefix" = in-place -o "$WITH_INSTALL_DIR" = in-place; then
	IN_PLACE=yes
	INSTALL_DIR=$ROOT_DIR
	test -z "$WITH_LINKS_DIR" && WITH_LINKS_DIR=no
else
	IN_PLACE=no
	if test -z "$WITH_INSTALL_DIR"; then
             INSTALL_DIR=$prefix/$PKG_NAME
        else
             INSTALL_DIR=$WITH_INSTALL_DIR
        fi
fi


# *-----------*
# * LINKS_DIR *
# *-----------*

case "$WITH_LINKS_DIR" in
	no) LINKS_DIR=none;;
	'') LINKS_DIR=$exec_prefix/bin;;
	*)  LINKS_DIR=$WITH_LINKS_DIR;;
esac


# *---------*
# * DOC_DIR *
# *---------*

case "$WITH_DOC_DIR" in
	no) DOC_DIR=none;
            test -z "$WITH_HTML_DIR" && WITH_HTML_DIR=$INSTALL_DIR/doc/Html;;
	'') DOC_DIR=$INSTALL_DIR/doc;;
	*)  DOC_DIR=$WITH_DOC_DIR;;
esac
if same_directory "$DOC_DIR" $ROOT_DIR/doc; then
	DOC_DIR=none
fi


# *----------*
# * HTML_DIR *
# *----------*


case "$WITH_HTML_DIR" in
	no) HTML_DIR=none;;
	'') if test "$DOC_DIR" = none; then
		WITH_HTML_DIR=no;
		HTML_DIR=none
	    else
		HTML_DIR=$DOC_DIR/Html
	    fi;;
	*)  HTML_DIR=$WITH_HTML_DIR;;
esac
if same_directory "$HTML_DIR" $ROOT_DIR/doc/Html; then
	HTML_DIR=none
fi


# *--------------*
# * EXAMPLES_DIR *
# *--------------*

case "$WITH_EXAMPLES_DIR" in
	no) EXAMPLES_DIR=none;;
	'') EXAMPLES_DIR=$INSTALL_DIR;;
	*)  EXAMPLES_DIR=$WITH_EXAMPLES_DIR;;
esac
if same_directory "$EXAMPLES_DIR" $ROOT_DIR; then
	EXAMPLES_DIR=none
fi


# *---------*
# * Summary *
# *---------*

echo 'DIRECTORIES'
echo "--> Installation:       $INSTALL_DIR"
echo "--> Link to binaries:   $LINKS_DIR"
echo "--> Documentation:      $DOC_DIR"
echo "--> HTML documentation: $HTML_DIR"
echo "--> Examples:           $EXAMPLES_DIR"


# ******************
# * sub-components *
# ******************


if test "$IN_PLACE" = no; then
	TXT_FILES='COPYING VERSION NEWS ChangeLog'
else
	TXT_FILES=
fi

BIN_FILES=
OBJ_FILES=
LIB_FILES=

INC_FILES="$PROLOG_NAME1.h fd_to_c.h"
DOC_FILES='???*.dvi ???*.ps ???*.pdf ???*.chm'
HTML_FILES='???*.html ???*.gif'
EXPL_FILES='Makefile README PROGS ??*.pl'
EXC_FILES='Makefile README ??*.pl ??*_c.c'
EXFD_FILES='Makefile ??*.pl ??*.fd'


B="$GPLC $HEXGPLC $TOP_LEVEL pl2wam wam2ma ma2asm"
O="obj_begin obj_end top_level all_pl_bips debugger"
L="$LIB_ENGINE_PL $LIB_BIPS_PL"

if test "$USE_GUI_CONSOLE" = yes -a \( "$USE_LINEDIT" = no -o "$WIN32" = no \)
then
        AC_DEFINE(NO_USE_GUI_CONSOLE) USE_GUI_CONSOLE=no
fi

if test "$USE_LINEDIT" = yes; then
	MAKE_LE_DIRS='$(LE_DIRS)'
	MAKE_LE_INTERF_OBJS='$(LE_INTERF_OBJS)'
        L="$L $LIB_LINEDIT"
else
	MAKE_LE_DIRS=
	MAKE_LE_INTERF_OBJS='$(NO_LE_INTERF_OBJS)'
fi


if test "$USE_GUI_CONSOLE" = yes; then
        TOP_LEVEL_FLAGS=--gui-console
	MAKE_W32GC_DIRS='$(W32GC_DIRS)'
        L="$L $DLL_W32GUICONS"
        O="$O w32gc_interf"
else
        TOP_LEVEL_FLAGS=
	MAKE_W32GC_DIRS=
fi

if test "$USE_SOCKETS" = yes; then
	MAKE_SOCKETS_OBJS='$(SOCKETS_OBJS)'
else
	MAKE_SOCKETS_OBJS='$(NO_SOCKETS_OBJS)'
fi

if test "$USE_FD_SOLVER" = yes; then
	MAKE_FD_DIRS='$(FD_DIRS)'
	B="$B fd2c"
        L="$L $LIB_ENGINE_FD $LIB_BIPS_FD"
        O="$O all_fd_bips"
else
	MAKE_FD_DIRS=
fi

for i in $B; do
	BIN_FILES="$BIN_FILES $i$EXE_SUFFIX"
done

for i in $O; do
	OBJ_FILES="$OBJ_FILES $i$OBJ_SUFFIX"
done

LIB_FILES=$L



# ***********************
# * Version & Copyright *
# ***********************

echo "$PKG_NAME" >VERSION
echo "$PKG_NAME" >../VERSION
echo "$PROLOG_VERSION" >version_no.tex
if diff version_no.tex ../doc/version_no.tex >/dev/null 2>&1; then
	rm version_no.tex
else
	mv version_no.tex ../doc/version_no.tex

fi
echo "$PROLOG_COPYRIGHT" >../doc/copyright.tex


# ********************
# * Files generation *
# ********************

OTHER_MAKEFILES=
for i in TestsPl/Makefile DevUtils/Makefile Ma2Asm/FromC/Makefile
do
	if test -f $i.in; then
		OTHER_MAKEFILES="$OTHER_MAKEFILES $i"
	fi
done

AC_OUTPUT
