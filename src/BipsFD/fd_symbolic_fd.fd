/*-------------------------------------------------------------------------*
 * GNU Prolog                                                              *
 *                                                                         *
 * Part  : FD constraint solver buit-in predicates                         *
 * File  : fd_symbolic_fd.fd                                               *
 * Descr.: symbolic constraints management - FD part                       *
 * Author: Daniel Diaz                                                     *
 *                                                                         *
 * Copyright (C) 1999-2015 Daniel Diaz                                     *
 *                                                                         *
 * This file is part of GNU Prolog                                         *
 *                                                                         *
 * GNU Prolog is free software: you can redistribute it and/or             *
 * modify it under the terms of either:                                    *
 *                                                                         *
 *   - the GNU Lesser General Public License as published by the Free      *
 *     Software Foundation; either version 3 of the License, or (at your   *
 *     option) any later version.                                          *
 *                                                                         *
 * or                                                                      *
 *                                                                         *
 *   - the GNU General Public License as published by the Free             *
 *     Software Foundation; either version 2 of the License, or (at your   *
 *     option) any later version.                                          *
 *                                                                         *
 * or both in parallel, as here.                                           *
 *                                                                         *
 * GNU Prolog is distributed in the hope that it will be useful,           *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of          *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU       *
 * General Public License for more details.                                *
 *                                                                         *
 * You should have received copies of the GNU General Public License and   *
 * the GNU Lesser General Public License along with this program.  If      *
 * not, see http://www.gnu.org/licenses/.                                  *
 *-------------------------------------------------------------------------*/


%{
Bool Pl_Fd_Element_V_To_Xi(int i, WamWord *array, Range *v);
Bool Pl_Fd_Atmost(int n, WamWord *array, int v);
Bool Pl_Fd_Atleast(int n, WamWord *array, int v);
Bool Pl_Fd_Exactly(int n, WamWord *array, int v);
%}



pl_fd_element(fdv I, l_int L, fdv V)

{
 start I in Pl_Fd_Element_I(L)
 start V in Pl_Fd_Element_I_To_V(dom(I), L)
 start I in Pl_Fd_Element_V_To_I(dom(V), L)
}




pl_fd_element_var(fdv I, l_fdv L, fdv V)

{
 start I in Pl_Fd_Element_Var_I(L)
 start V in Pl_Fd_Element_Var_I_To_V(dom(I), L) trigger also on dom(L)
 start I in Pl_Fd_Element_Var_V_To_I(dom(V), L) trigger also on dom(L)
 start Pl_Fd_Element_V_To_Xi(val(I), L, dom(V))
}




pl_fd_atmost(int N, l_fdv L, int V)

{
 start Pl_Fd_Atmost(N, L, V) trigger on dom(L) always
}




pl_fd_atleast(int N, l_fdv L, int V)

{
 start Pl_Fd_Atleast(N, L, V) trigger on dom(L) always
}




pl_fd_exactly(int N, l_fdv L, int V)

{
 start Pl_Fd_Exactly(N, L, V) trigger on dom(L) always
}




